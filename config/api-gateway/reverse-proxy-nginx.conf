http {
    charset utf-8;
    ##
    # Basic Settings 443 서버
    ##
    server {
        server_name dev-avocado.com www.dev-avocado.com;
        location / {
            index hello;
            alias /etc/nginx/sample-response/;

            limit_except GET POST {
                deny all;
            }
        }

        location /slack/ {
            rewrite ^/slack(/.*)$ $1 break;
            proxy_pass http://192.168.0.3:8080;
        }

        location /eb/ {
            rewrite ^/eb(/.*)$ $1 break;
            proxy_pass http://192.168.0.3:8080;
        }

        # minio
        location /mio {
            proxy_set_header Host $http_host; # 헤더에 proxy 서버의 host로 변경
            proxy_set_header X-Real-IP $remote_addr; # 실제 출발지?로 변경
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-NginX-Proxy true;

            # This is necessary to pass the correct IP to be hashed;
            real_ip_header X-Real-IP;

            proxy_connect_timeout 300;

            # To support websockets in MinIO versions released after January 2023
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            chunked_transfer_encoding off;

            proxy_pass http://192.168.0.21:9002/; # This uses the upstream directive definition to load balace and assumes a static Console port of 9001
        }

        # SSL 설정 Auto Setting By Certbot
        listen 443 ssl; # managed by Certbot
        ssl_certificate /etc/letsencrypt/live/dev-avocado.com/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/dev-avocado.com/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
    }

    server {
        if ($host = www.dev-avocado.com) {
            return 301 https://$host$request_uri;
        } # managed by Certbot


        if ($host = dev-avocado.com) {
            return 301 https://$host$request_uri;
        } # managed by Certbot

        server_name dev-avocado.com www.dev-avocado.com;
        listen 80;
        return 404; # managed by Certbot
    }

    # 파일에 있는 내용 가져오기
    include /etc/nginx/conf.d/nuon.or.kr.conf;

    server {
        listen 80;
        listen [::]:80;
        server_name mio.dev-avocado.com;

        # Allow special characters in headers
        ignore_invalid_headers off;
        # Allow any size file to be uploaded.
        # Set to a value such as 1000m; to restrict file size to a specific value
        client_max_body_size 0;
        # Disable buffering
        proxy_buffering off;
        proxy_request_buffering off;

        location / {
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-NginX-Proxy true;

            # This is necessary to pass the correct IP to be hashed
            real_ip_header X-Real-IP;

            proxy_connect_timeout 300;

            # To support websocket
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            chunked_transfer_encoding off;

            proxy_pass http://192.168.0.46:9001/; # This uses the upstream directive definition to load balance
        }
    }
}
